<?php
/**
 * Generated by Haxe 4.1.5
 */

namespace fabula\condition;

use \php\Boot;

/**
 * Test if an event has been achieved
 * @author Loudo
 */
class ConditionEvent extends Condition {
	/**
	 * @var \Closure
	 */
	public $_isCompleted;

	/**
	 * @param string $condition
	 * @param \Closure $isCompleted
	 * @param bool $affirmation
	 * 
	 * @return void
	 */
	public function __construct ($condition, $isCompleted, $affirmation = true) {
		#C:\HaxeLib\fabula/git/src/fabula/condition/ConditionEvent.hx:12: lines 12-15
		if ($affirmation === null) {
			$affirmation = true;
		}
		#C:\HaxeLib\fabula/git/src/fabula/condition/ConditionEvent.hx:13: characters 3-29
		$this->_isCompleted = $isCompleted;
		#C:\HaxeLib\fabula/git/src/fabula/condition/ConditionEvent.hx:14: characters 3-39
		parent::__construct($condition, EConditionType::EVENT(), $affirmation);
	}

	/**
	 * @return bool
	 */
	public function test () {
		#C:\HaxeLib\fabula/git/src/fabula/condition/ConditionEvent.hx:19: lines 19-22
		if (($this->_isCompleted)($this->condition)) {
			#C:\HaxeLib\fabula/git/src/fabula/condition/ConditionEvent.hx:21: characters 4-23
			return $this->_affirmation;
		}
		#C:\HaxeLib\fabula/git/src/fabula/condition/ConditionEvent.hx:23: characters 3-23
		return !$this->_affirmation;
	}
}

Boot::registerClass(ConditionEvent::class, 'fabula.condition.ConditionEvent');
