<?php
/**
 * Generated by Haxe 4.1.5
 */

namespace fabula\condition;

use \php\Boot;

/**
 * Test a value of a variable
 * @author Loudo
 */
class ConditionVariable extends Condition {
	/**
	 * @var \Closure
	 */
	public $_getVar;
	/**
	 * @var string
	 */
	public $_operation;
	/**
	 * @var string
	 */
	public $_targetValue;

	/**
	 * @param string $name
	 * @param string $operation
	 * @param string $match
	 * @param \Closure $getVar
	 * @param bool $affirmation
	 * 
	 * @return void
	 */
	public function __construct ($name, $operation, $match, $getVar, $affirmation = true) {
		#C:\HaxeLib\fabula/git/src/fabula/condition/ConditionVariable.hx:15: lines 15-21
		if ($affirmation === null) {
			$affirmation = true;
		}
		#C:\HaxeLib\fabula/git/src/fabula/condition/ConditionVariable.hx:16: characters 3-37
		parent::__construct($name, EConditionType::VARIABLE(), $affirmation);
		#C:\HaxeLib\fabula/git/src/fabula/condition/ConditionVariable.hx:18: characters 3-19
		$this->_getVar = $getVar;
		#C:\HaxeLib\fabula/git/src/fabula/condition/ConditionVariable.hx:19: characters 3-25
		$this->_operation = $operation;
		#C:\HaxeLib\fabula/git/src/fabula/condition/ConditionVariable.hx:20: characters 3-23
		$this->_targetValue = $match;
	}

	/**
	 * @return bool
	 */
	public function test () {
		#C:\HaxeLib\fabula/git/src/fabula/condition/ConditionVariable.hx:25: characters 3-33
		$vari = ($this->_getVar)($this->condition);
		#C:\HaxeLib\fabula/git/src/fabula/condition/ConditionVariable.hx:26: characters 3-64
		return $vari->compare($this->_operation, $this->_targetValue) === $this->_affirmation;
	}
}

Boot::registerClass(ConditionVariable::class, 'fabula.condition.ConditionVariable');
