<?php
/**
 * Generated by Haxe 4.1.5
 */

namespace fabula\condition;

use \php\_Boot\HxAnon;
use \php\Boot;
use \haxe\Log;
use \php\_Boot\HxString;

class VariableEnum extends Variable {
	/**
	 * @var \Array_hx
	 */
	public $options;

	/**
	 * @param string $id
	 * @param string $startingValue
	 * 
	 * @return void
	 */
	public function __construct ($id, $startingValue) {
		#C:\HaxeLib\fabula/git/src/fabula/condition/VariableEnum.hx:11: characters 3-37
		$this->options = HxString::split($startingValue, ",");
		#C:\HaxeLib\fabula/git/src/fabula/condition/VariableEnum.hx:13: characters 3-33
		parent::__construct($id, EVariableType::ENUM(), $startingValue);
	}

	/**
	 * @param string $value
	 * 
	 * @return string
	 */
	public function convert ($value) {
		#C:\HaxeLib\fabula/git/src/fabula/condition/VariableEnum.hx:74: characters 3-15
		return $value;
	}

	/**
	 * @param string $value
	 * 
	 * @return bool
	 */
	public function set ($value) {
		#C:\HaxeLib\fabula/git/src/fabula/condition/VariableEnum.hx:18: characters 3-32
		$temp = $this->value;
		#C:\HaxeLib\fabula/git/src/fabula/condition/VariableEnum.hx:19: characters 3-35
		$index = \Std::parseInt($value);
		#C:\HaxeLib\fabula/git/src/fabula/condition/VariableEnum.hx:20: lines 20-65
		if ($index === null) {
			#C:\HaxeLib\fabula/git/src/fabula/condition/VariableEnum.hx:22: lines 22-55
			if ($value === $this->options->join(",")) {
				#C:\HaxeLib\fabula/git/src/fabula/condition/VariableEnum.hx:25: characters 5-23
				$value = ($this->options->arr[0] ?? null);
			} else if ($value === "+") {
				#C:\HaxeLib\fabula/git/src/fabula/condition/VariableEnum.hx:28: characters 5-49
				$index1 = $this->options->indexOf($this->value) + 1;
				#C:\HaxeLib\fabula/git/src/fabula/condition/VariableEnum.hx:29: lines 29-35
				if ($index1 < $this->options->length) {
					#C:\HaxeLib\fabula/git/src/fabula/condition/VariableEnum.hx:31: characters 6-28
					$value = ($this->options->arr[$index1] ?? null);
				} else {
					#C:\HaxeLib\fabula/git/src/fabula/condition/VariableEnum.hx:34: characters 6-18
					return false;
				}
			} else if ($value === "-") {
				#C:\HaxeLib\fabula/git/src/fabula/condition/VariableEnum.hx:38: characters 5-49
				$index1 = $this->options->indexOf($this->value) - 1;
				#C:\HaxeLib\fabula/git/src/fabula/condition/VariableEnum.hx:39: lines 39-45
				if ($index1 >= 0) {
					#C:\HaxeLib\fabula/git/src/fabula/condition/VariableEnum.hx:41: characters 6-28
					$value = ($this->options->arr[$index1] ?? null);
				} else {
					#C:\HaxeLib\fabula/git/src/fabula/condition/VariableEnum.hx:44: characters 6-18
					return false;
				}
			} else if ($this->options->indexOf($value) === -1) {
				#C:\HaxeLib\fabula/git/src/fabula/condition/VariableEnum.hx:51: characters 6-11
				(Log::$trace)("[Fabula > Variable] " . ($value??'null') . " not in options of " . ($this->id??'null'), new HxAnon([
					"fileName" => "fabula/condition/VariableEnum.hx",
					"lineNumber" => 51,
					"className" => "fabula.condition.VariableEnum",
					"methodName" => "set",
				]));
				#C:\HaxeLib\fabula/git/src/fabula/condition/VariableEnum.hx:52: characters 6-18
				return false;
			}
			#C:\HaxeLib\fabula/git/src/fabula/condition/VariableEnum.hx:56: characters 4-22
			$this->value = $value;
		} else {
			#C:\HaxeLib\fabula/git/src/fabula/condition/VariableEnum.hx:59: lines 59-63
			if (($index >= $this->options->length) || ($index < 0)) {
				#C:\HaxeLib\fabula/git/src/fabula/condition/VariableEnum.hx:61: characters 5-10
				(Log::$trace)("[Fabula > Variable] " . ($index??'null') . " not in length of " . ($this->id??'null'), new HxAnon([
					"fileName" => "fabula/condition/VariableEnum.hx",
					"lineNumber" => 61,
					"className" => "fabula.condition.VariableEnum",
					"methodName" => "set",
				]));
				#C:\HaxeLib\fabula/git/src/fabula/condition/VariableEnum.hx:62: characters 5-17
				return false;
			}
			#C:\HaxeLib\fabula/git/src/fabula/condition/VariableEnum.hx:64: characters 4-31
			$this->value = ($this->options->arr[$index] ?? null);
		}
		#C:\HaxeLib\fabula/git/src/fabula/condition/VariableEnum.hx:67: lines 67-68
		if ($temp !== $this->value) {
			#C:\HaxeLib\fabula/git/src/fabula/condition/VariableEnum.hx:68: characters 4-15
			return true;
		}
		#C:\HaxeLib\fabula/git/src/fabula/condition/VariableEnum.hx:69: characters 3-15
		return false;
	}

	/**
	 * @return string
	 */
	public function toXMLString () {
		#C:\HaxeLib\fabula/git/src/fabula/condition/VariableEnum.hx:79: characters 3-74
		return "<variable id=\"" . ($this->id??'null') . "\" type=\"" . (\Std::string($this->type)??'null') . "\" value=\"" . ($this->options->join(",")??'null') . "\"/>";
	}
}

Boot::registerClass(VariableEnum::class, 'fabula.condition.VariableEnum');
