<?php
/**
 * Generated by Haxe 4.1.5
 */

namespace fabula\condition\_EConditionOp;

use \php\Boot;

final class EConditionOp_Impl_ {

	/**
	 * @param string $s
	 * 
	 * @return string
	 */
	public static function fromString ($s) {
		#C:\HaxeLib\fabula/git/src/fabula/condition/EConditionOp.hx:19: lines 19-37
		if ($s === "!=") {
			#C:\HaxeLib\fabula/git/src/fabula/condition/EConditionOp.hx:32: characters 5-21
			return "!=";
		} else if ($s === "<") {
			#C:\HaxeLib\fabula/git/src/fabula/condition/EConditionOp.hx:24: characters 5-17
			return "<";
		} else if ($s === "<=") {
			#C:\HaxeLib\fabula/git/src/fabula/condition/EConditionOp.hx:28: characters 5-23
			return "<=";
		} else if ($s === "=") {
			#C:\HaxeLib\fabula/git/src/fabula/condition/EConditionOp.hx:30: characters 5-17
			return "=";
		} else if ($s === ">") {
			#C:\HaxeLib\fabula/git/src/fabula/condition/EConditionOp.hx:22: characters 5-19
			return ">";
		} else if ($s === ">=") {
			#C:\HaxeLib\fabula/git/src/fabula/condition/EConditionOp.hx:26: characters 5-25
			return ">=";
		} else if ($s === "in") {
			#C:\HaxeLib\fabula/git/src/fabula/condition/EConditionOp.hx:34: characters 5-14
			return "in";
		} else {
			#C:\HaxeLib\fabula/git/src/fabula/condition/EConditionOp.hx:36: characters 5-16
			return null;
		}
	}
}

Boot::registerClass(EConditionOp_Impl_::class, 'fabula.condition._EConditionOp.EConditionOp_Impl_');
